name: Contentful CI/CD Env Migration 

on:
  workflow_dispatch:
    inputs:
      brand:
        description: 'Select brand (Contentful space) to deploy'
        required: true
        type: choice
        options:
          - Dev R&D
          - Fitness First
          - Goodlife Website
          - Gym Website
          - Jetts New Zealand
          - Zap Fitness

env:
  CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}
  MASTER_ALIAS: master
  NODE_VERSION: 18

jobs:
  # Production Promotion: Promote/Unlock env
  migrate-contentful:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Contentful CLI
        run: npm install -g contentful-cli contentful-migration contentful-merge
      
      - name: Set SPACE_ID based on brand input
        id: set_space
        run: |
          case "${{ github.event.inputs.brand }}" in
            "Fitness First")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID_FITNESS_FIRST }}" >> $GITHUB_ENV
              ;;
            "Dev R&D")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID }}" >> $GITHUB_ENV
              ;;
            "Goodlife Website")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID_GOODLIFE_WEBSITE }}" >> $GITHUB_ENV
              ;;
            "Gym Website")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID_GYM_WEBSITE }}" >> $GITHUB_ENV
              ;;
            "Jetts New Zealand")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID_JETTS_NEW_ZEALAND }}" >> $GITHUB_ENV
              ;;
            "Zap Fitness")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID_ZAP_FITNESS }}" >> $GITHUB_ENV
              ;;
            *)
              echo "Unknown brand '${{ github.event.inputs.brand }}'"
              exit 1
              ;;
          esac
      
      - name: Fetch latest environment version
        id: fetch_env
        run: |
          echo "Fetching environments via Contentful API for space $SPACE_ID"

          # Fetch env list
          curl -s \
            -H "Authorization: Bearer ${{ secrets.CONTENTFUL_TOKEN }}" \
            -H "Content-Type: application/json" \
            "https://api.contentful.com/spaces/$SPACE_ID/environments" \
            > envs_raw.json

          # Debug raw response
          echo "Raw response:"
          cat envs_raw.json

          # Guard against empty or error response
          if ! jq -e '.items' envs_raw.json >/dev/null; then
            echo "Error: Invalid response or token invalid"
            exit 1
          fi

          # Extract latest master-vN environment by createdAt
          latest_env=$(jq -r '
            [.items[] 
              | select(.name | test("^master-v[0-9]+$")) 
              | {name: .name, createdAt: .sys.createdAt}] 
            | sort_by(.createdAt) 
            | last 
            | .name
          ' envs_raw.json)

          # Fallback to master if none found
          if [ -z "$latest_env" ] || [ "$latest_env" = "null" ]; then
            echo "No versioned env found, defaulting to master"
            target_env="master"
          else
            target_env="$latest_env"
          fi

          echo "TARGET_ENV=$target_env" >> $GITHUB_ENV
          echo "Resolved TARGET_ENV=$target_env"
        env:
          CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}
          SPACE_ID: ${{ env.SPACE_ID }}
      
      - name: Lock master environment
        run: bash ./scripts/contentful-lock-master.sh "$SPACE_ID" "$CONTENTFUL_TOKEN"
        env:
          SPACE_ID: ${{ env.SPACE_ID }}
          CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}

      - name: Upload roles backup artifact
        uses: actions/upload-artifact@v4
        with:
          name: contentful-roles-backup
          path: ./roles-backup.json
          retention-days: 7
      
      # Create changeset between source and target environments
      - name: Create changeset between environments
        run: |
          contentful-merge create \
            --cda-token "$CONTENTFUL_TOKEN" \
            --space "$CONTENTFUL_SPACE_ID" \
            --source master \
            --target "$TARGET_ENV" \
            --output-file changeset.json
        env:
          SPACE_ID: ${{ env.SPACE_ID }}
          CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}
          TARGET_ENV: ${{ env.TARGET_ENV }}
      
      # Check for merge conflicts in changeset
      - name: Check for merge conflicts
        id: conflict-check
        run: |
          if grep -q '"conflicts":\s*\[' changeset.json && grep -qv '"conflicts":\s*\[\s*\]' changeset.json; then
            echo "conflicts_found=true" >> $GITHUB_OUTPUT
            echo "Conflicts found:"
            cat changeset.json | jq '.conflicts'
          else
            echo "conflicts_found=false" >> $GITHUB_OUTPUT
          fi
      
      # Apply changeset if no conflicts
      - name: Apply changeset if no conflicts
        if: steps.conflict-check.outputs.conflicts_found == 'false'
        run: |
          contentful-merge apply \
            --cma-token "$CONTENTFUL_TOKEN" \
            --space "$CONTENTFUL_SPACE_ID" \
            --environment "$TARGET_ENV" \
            --file changeset.json
        env:
          SPACE_ID: ${{ env.SPACE_ID }}
          CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}
          TARGET_ENV: ${{ env.TARGET_ENV }}
      
      # Fail pipeline if merge conflicts are present
      - name: Fail if conflicts are present
        if: steps.conflict-check.outputs.conflicts_found == 'true'
        run: exit 1
      
      - name: Update master alias
        run: |
          contentful space environment-alias update \
            --space-id "$SPACE_ID" \
            --alias-id "$MASTER_ALIAS" \
            --target-environment-id "$TARGET_ENV" \
            --management-token "$CONTENTFUL_TOKEN"
        env:
          SPACE_ID: ${{ env.SPACE_ID }}
          CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}
          MASTER_ALIAS: ${{ env.MASTER_ALIAS }}
          TARGET_ENV: ${{ env.TARGET_ENV }}

      - name: Download roles backup artifact
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: contentful-roles-backup
          path: .

      - name: Unlock master environment
        if: always()
        run: bash ./scripts/contentful-unlock-master.sh "$SPACE_ID" "$CONTENTFUL_TOKEN"
        env:
          SPACE_ID: ${{ env.SPACE_ID }}
          CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}
