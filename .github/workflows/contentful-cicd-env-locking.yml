name: Contentful CI/CD Env Locking

on:
  workflow_dispatch:
    inputs:
      brand:
        description: 'Select brand (Contentful space) to deploy'
        required: true
        type: choice
        options:
          - Dev R&D
          - Fitness First
          - Goodlife Website
          - Gym Website
          - Jetts New Zealand
          - Zap Fitness
      max_env_count:
        description: 'Maximum allowed environments in space (excluding master)'
        required: true
        default: 5
      base_env_name:
        description: 'Base environment name prefix (e.g. master-v)'
        required: true
        default: master-v

env:
  #CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
  CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}
  MASTER_ALIAS: master
  #TARGET_ENV: testing1
  NODE_VERSION: 18

jobs:
  # Production Promotion: Clone/Migrate/Lock env
  migrate-contentful:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Contentful CLI
        run: npm install -g contentful-cli contentful-migration contentful-merge
      
      - name: Set SPACE_ID based on brand input
        id: set_space
        run: |
          case "${{ github.event.inputs.brand }}" in
            "Fitness First")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID_FITNESS_FIRST }}" >> $GITHUB_ENV
              ;;
            "Dev R&D")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID }}" >> $GITHUB_ENV
              ;;
            "Goodlife Website")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID_GOODLIFE_WEBSITE }}" >> $GITHUB_ENV
              ;;
            "Gym Website")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID_GYM_WEBSITE }}" >> $GITHUB_ENV
              ;;
            "Jetts New Zealand")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID_JETTS_NEW_ZEALAND }}" >> $GITHUB_ENV
              ;;
            "Zap Fitness")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID_ZAP_FITNESS }}" >> $GITHUB_ENV
              ;;
            *)
              echo "Unknown brand '${{ github.event.inputs.brand }}'"
              exit 1
              ;;
          esac
      
      - name: Manage environments and create new version
        id: manage_envs
        run: |
          echo "Listing environments for space $SPACE_ID"
          contentful space environment list --space-id "$SPACE_ID" --management-token "$CONTENTFUL_TOKEN" --json > envs.json

          cat env_list.json

          # Count total environments excluding 'master' & alias (optional)
          total_envs=$(jq '[.items[] | select(.sys.id != "master" and .sys.id != "'"$MASTER_ALIAS"'")] | length' envs.json)
          max_allowed=$(( ${{ github.event.inputs.max_env_count }} ))
          echo "Total environments (excluding master and alias): $total_envs"
          echo "Maximum allowed environments: $max_allowed"

          # If total exceeds max allowed, delete oldest 2
          if (( total_envs > max_allowed )); then
            oldest_envs=$(jq -r '[.items[] | select(.sys.id != "master" and .sys.id != "'"$MASTER_ALIAS"'")] | sort_by(.sys.createdAt) | .[:2] | .[].sys.id' envs.json)
            for env in $oldest_envs; do
              echo "Deleting oldest environment $env"
              contentful space environment delete --space-id "$SPACE_ID" --environment-id "$env" --management-token "$CONTENTFUL_TOKEN" --yes
            done
          else
            echo "No need to delete environments."
          fi

          # Fetch updated JSON after deletion
          contentful space environment list --space-id "$SPACE_ID" --management-token "$CONTENTFUL_TOKEN" --json > envs_updated.json

          # Find active environment (alias target)
          active_env=$(jq -r '.items[] | select(.sys.id=="'"$MASTER_ALIAS"'") | .sys.id' envs_updated.json)
          if [[ "$active_env" == "master" ]]; then
            # If master points to master, get latest version
            latest_version_env=$(jq -r '[.items[] | select(.sys.id | startswith("master-v"))] | max_by(.sys.createdAt) | .sys.id' envs_updated.json)
            version_num=${latest_version_env#"master-v"}
            new_version=$((version_num + 1))
            new_env="master-v$new_version"
          else
            # You can add custom logic here if alias points elsewhere
            new_env="master-v1"
          fi

          echo "New environment to create: $new_env"
          echo "NEW_ENV=$new_env" >> $GITHUB_ENV
        env:
          CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}
          MASTER_ALIAS: ${{ env.MASTER_ALIAS }}
          SPACE_ID: ${{ env.SPACE_ID }}

      
      - name: Clone environments
        run: |
          contentful space environment create \
            --space-id "$SPACE_ID" \
            --management-token "$CONTENTFUL_TOKEN" \
            --environment-id "$NEW_ENV" \
            --name "$NEW_ENV" \
            --source-environment "$MASTER_ALIAS"
        env:
          SPACE_ID: ${{ env.SPACE_ID }}
          CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}
          MASTER_ALIAS: ${{ env.MASTER_ALIAS }}
          NEW_ENV: ${{ env.NEW_ENV }}

      # # Run ALL migration scripts in cloned environment using the GitHub Action  
      # - name: Run migration scripts
      #   uses: contentful-userland/contentful-action@main
      #   with:
      #     space_id: ${{ secrets.CONTENTFUL_SPACE_ID }}
      #     management_api_key: ${{ secrets.CONTENTFUL_TOKEN }}
      #     migrations_dir: migrations
      #     environment_id: NEW_ENV
      
      #Run a specific migration script
      - name: Run specific migration script in cloned environment
        run: |
          contentful-migration \
            --space-id "$SPACE_ID" \
            --access-token "$CONTENTFUL_TOKEN" \
            --environment-id "$NEW_ENV" \
            --yes \
            Migrations/index.js
        env:
          SPACE_ID: ${{ env.SPACE_ID }}
          CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}
          NEW_ENV: ${{ env.NEW_ENV }}
      
      - name: Lock master environment
        run: bash ./scripts/contentful-lock-master.sh "$SPACE_ID" "$CONTENTFUL_TOKEN"
        env:
          SPACE_ID: ${{ env.SPACE_ID }}
          CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}

      - name: Upload roles backup artifact
        uses: actions/upload-artifact@v4
        with:
          name: contentful-roles-backup
          path: roles-backup.json
          retention-days: 7