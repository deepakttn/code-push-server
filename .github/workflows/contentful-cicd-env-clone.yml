name: Contentful CI/CD Env Clone

on:
  workflow_dispatch:
    inputs:
      brand:
        description: 'Select brand (Contentful space) to deploy'
        required: true
        type: choice
        options:
          - Dev R&D
          - Fitness First
          - Goodlife Website
          - Gym Website
          - Jetts New Zealand
          - Zap Fitness
      max_env_count:
        description: 'Maximum allowed environments in space (excluding master)'
        required: true
        default: 5
      base_env_name:
        description: 'Base environment name prefix (e.g. master-v)'
        required: true
        default: master

env:
  #CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
  CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}
  MASTER_ALIAS: master
  #TARGET_ENV: testing1
  NODE_VERSION: 18

jobs:
  # Production Promotion: Clone/Migrate/Lock env
  migrate-contentful:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Contentful CLI
        run: npm install -g contentful-cli contentful-migration contentful-merge
      
      - name: Set SPACE_ID based on brand input
        id: set_space
        run: |
          case "${{ github.event.inputs.brand }}" in
            "Fitness First")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID_FITNESS_FIRST }}" >> $GITHUB_ENV
              ;;
            "Dev R&D")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID }}" >> $GITHUB_ENV
              ;;
            "Goodlife Website")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID_GOODLIFE_WEBSITE }}" >> $GITHUB_ENV
              ;;
            "Gym Website")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID_GYM_WEBSITE }}" >> $GITHUB_ENV
              ;;
            "Jetts New Zealand")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID_JETTS_NEW_ZEALAND }}" >> $GITHUB_ENV
              ;;
            "Zap Fitness")
              echo "SPACE_ID=${{ secrets.CONTENTFUL_SPACE_ID_ZAP_FITNESS }}" >> $GITHUB_ENV
              ;;
            *)
              echo "Unknown brand '${{ github.event.inputs.brand }}'"
              exit 1
              ;;
          esac
      
      - name: Manage environments and create new version
        id: manage_envs
        run: |
          echo "Fetching environments via Contentful API for space $SPACE_ID"

          # Fetch env list
          curl -s \
            -H "Authorization: Bearer $CONTENTFUL_TOKEN" \
            -H "Content-Type: application/json" \
            "https://api.contentful.com/spaces/$SPACE_ID/environments" \
            > envs_raw.json

          # Extract required data
          jq '[ .items[] | { name: .name, id: .sys.id, createdAt: .sys.createdAt } ]' envs_raw.json > envs_parsed.json

          echo "Parsed environments:"
          jq -r '.[] | "\(.name) | \(.id) | \(.createdAt)"' envs_parsed.json

          # Count non-master envs
          base="${{ github.event.inputs.base_env_name }}"
          master_alias="${{ env.MASTER_ALIAS }}"
          env_count=$(jq "[ .[] | select(.name != \"$master_alias\" and (.name | test(\"^${base}-v[0-9]+$\"))) ] | length" envs_parsed.json)
          echo "Count of relevant environments: $env_count"

          max_env=${{ github.event.inputs.max_env_count }}

          if (( env_count > max_env )); then
            echo "Deleting oldest environments to maintain limit"
            jq -r "[ .[] | select(.name != \"$master_alias\" and (.name | test(\"^${base}-v[0-9]+$\"))) ] 
                     | sort_by(.createdAt) 
                     | .[0:${2}] 
                     | .[].id" envs_parsed.json | while read env_id; do
              echo "Deleting env $env_id"
              contentful space environment delete \
                --space-id "$SPACE_ID" \
                --environment-id "$env_id" \
                --management-token "$CONTENTFUL_TOKEN" \
                --yes
            done
          else
            echo "No deletion needed"
          fi

          # Find highest version among base-envs
          highest=$(jq -r --arg base "$base" \
            '[ .[] | select(.name | test("^" + $base + "-v[0-9]+$")) 
               | (.name | capture(".*-v(?<num>[0-9]+)").num | tonumber) ] 
             | max // 0' envs_parsed.json)

          new_env_name="${base}-v$((highest + 1))"
          echo "New environment to create: $new_env_name"
          echo "NEW_ENV=$new_env_name" >> $GITHUB_ENV
        env:
          CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}
          MASTER_ALIAS: ${{ env.MASTER_ALIAS }}
          SPACE_ID: ${{ env.SPACE_ID }}

      
      - name: Clone environments
        run: |
          contentful space environment create \
            --space-id "$SPACE_ID" \
            --management-token "$CONTENTFUL_TOKEN" \
            --environment-id "$NEW_ENV" \
            --name "$NEW_ENV" \
            --source-environment "$MASTER_ALIAS"
        env:
          SPACE_ID: ${{ env.SPACE_ID }}
          CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}
          MASTER_ALIAS: ${{ env.MASTER_ALIAS }}
          NEW_ENV: ${{ env.NEW_ENV }}

      # # Run ALL migration scripts in cloned environment using the GitHub Action  
      # - name: Run migration scripts
      #   uses: contentful-userland/contentful-action@main
      #   with:
      #     space_id: ${{ secrets.CONTENTFUL_SPACE_ID }}
      #     management_api_key: ${{ secrets.CONTENTFUL_TOKEN }}
      #     migrations_dir: migrations
      #     environment_id: NEW_ENV
      
      #Run a specific migration script
      - name: Run specific migration script in cloned environment
        run: |
          contentful-migration \
            --space-id "$SPACE_ID" \
            --access-token "$CONTENTFUL_TOKEN" \
            --environment-id "$NEW_ENV" \
            --yes \
            Migrations/index.js
        env:
          SPACE_ID: ${{ env.SPACE_ID }}
          CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}
          NEW_ENV: ${{ env.NEW_ENV }}
      
      - name: Lock master environment
        run: bash ./scripts/contentful-lock-master.sh "$SPACE_ID" "$CONTENTFUL_TOKEN"
        env:
          SPACE_ID: ${{ env.SPACE_ID }}
          CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}

      - name: Upload roles backup artifact
        uses: actions/upload-artifact@v4
        with:
          name: contentful-roles-backup
          path: ./roles-backup.json
          retention-days: 7
      
      - name: Trigger Migration workflow
        uses: peter-evans/workflow-dispatch@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          workflow: contentful-cicd-env-migration.yml
          ref: main
          inputs: |
            brand: ${{ github.event.inputs.brand }}
            clone_run_id: ${{ github.run_id }}
      
      # - name: Update master alias
      #   run: |
      #     contentful space environment-alias update \
      #       --space-id "$SPACE_ID" \
      #       --alias-id "$MASTER_ALIAS" \
      #       --target-environment-id "$NEW_ENV" \
      #       --management-token "$CONTENTFUL_TOKEN"
      #   env:
      #     SPACE_ID: ${{ env.SPACE_ID }}
      #     CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}
      #     MASTER_ALIAS: ${{ env.MASTER_ALIAS }}
      #     NEW_ENV: ${{ env.NEW_ENV }}

      # - name: Download roles backup artifact
      #   if: always()
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: contentful-roles-backup
      #     path: .

      # - name: Unlock master environment
      #   if: always()
      #   run: bash ./scripts/contentful-unlock-master.sh "$SPACE_ID" "$CONTENTFUL_TOKEN"
      #   env:
      #     SPACE_ID: ${{ env.SPACE_ID }}
      #     CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}